#!/bin/sh
# Read the river, riverctl, and rivertile man pages.

# Use the "logo" key as the primary modifier
mod="Mod4"
mod1="Mod1"

# River wayland stuff
riverctl spawn "dbus-update-activation-environment SEATD_SOCK DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river"
riverctl spawn "systemctl --user import-environment XDG_CURRENT_DESKTOP XDG_SESSION_DESKTOP XDG_SESSION_TYPE"

# Open terms alacritty, foot
riverctl map normal $mod Return spawn 'ghostty -e tmux'
riverctl map normal $mod+Ctrl Return spawn 'alacritty -e tmux'
riverctl map normal $mod+Shift Return spawn foot

# Toggle waybar
riverctl map normal $mod B spawn "killall -SIGUSR1 waybar"

# Open rofi
#riverctl map normal $mod C spawn "rofi -show drun -show-icons -display-drun \"Search\""
riverctl map normal $mod space spawn "rofi -show drun -show-icons -display-drun \"Search\""

# Latest youtube videos!!!
riverctl map normal $mod Y spawn "$HOME/.config/river/scripts/yt"

# Dmenu, incase rofi fails
#riverctl map normal $mod+Shift C spawn "dmenu_run"

# Dismiss dunst messages
riverctl map normal $mod+Alt C spawn "dunstctl close-all"

# Open discord
riverctl map normal $mod+Shift D spawn "discord --ignore-gpu-blocklist --disable-features=UseOzonePlatform --enable-features=VaapiVideoDecoder --use-gl=desktop --enable-gpu-rasterization --enable-zero-copy"

# Open passmenu requires dmenu-wl
riverctl map normal $mod+Alt P spawn "$HOME/.config/river/scripts/passmenu"

# wl-kbptr keyboard map overlay
riverctl map normal $mod+Shift M spawn "wl-kbptr"
riverctl map normal $mod+Shift C spawn 'wlrctl pointer click left'
riverctl map normal $mod+Alt R spawn 'wlrctl pointer click right'

## Lock screen
# This is defind in process maybe share it but I like having difffernt lock
WALLPAPER_FILE=$(ls ~/.local/Pictures/wallpaper | sort -R | tail -n 1)
WALLPAPER_PATH=~/.local/Pictures/wallpaper/
WALLPAPER=${WALLPAPER_PATH}${WALLPAPER_FILE}
riverctl map normal $mod+Shift L spawn "swaylock -s fit -i $WALLPAPER"

# Reload river configuration
riverctl map normal $mod+Shift R spawn "$HOME/config/river/init"

# Close the focused window
#riverctl map normal $mod Q close #default is Q
riverctl map normal $mod W close

# Change output
riverctl map normal $mod O spawn "riverctl focus-output next"
# Send to next output
riverctl map normal $mod+Shift O spawn "riverctl send-to-output next"

# Exit river
riverctl map normal $mod+Shift Q exit

# Shutdown
#riverctl map normal $mod+$mod1 Q spawn "shutdown now"

# Mod+J and Mod+K to focus the next/previous view in the layout stack
riverctl map normal $mod J focus-view next
riverctl map normal $mod K focus-view previous

# Mod+Shift+J and Mod+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $mod+Shift J swap next
riverctl map normal $mod+Shift K swap previous

# Previous Tag like in bspwm
riverctl map normal $mod Tab focus-previous-tags

# Mod+H and Mod+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal $mod H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $mod L send-layout-cmd rivertile "main-ratio +0.05"

# Mod+Shift+H and Mod+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal $mod+$mod1 H send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod+$mod1 L send-layout-cmd rivertile "main-count -1"
riverctl map normal $mod+$mod1 L send-layout-cmd rivertile "main-count -1"

# Mod+{left,right,up,down} to move views
riverctl map normal $mod left move left 100
riverctl map normal $mod down move down 100
riverctl map normal $mod up move up 100
riverctl map normal $mod right move right 100

# Mod+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mod+$mod1+Control H snap left
riverctl map normal $mod+$mod1+Control J snap down
riverctl map normal $mod+$mod1+Control K snap up
riverctl map normal $mod+$mod1+Control L snap right

# Mod+Alt+Shif+{left,down,up,right} to resize views
riverctl map normal $mod+Shift left resize horizontal -100
riverctl map normal $mod+Shift down resize vertical 100
riverctl map normal $mod+Shift up resize vertical -100
riverctl map normal $mod+Shift right resize horizontal 100

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9); do
	tags=$((1 << ($i - 1)))

	# Mod+[1-9] to focus tag [0-6]
	riverctl map normal $mod $i set-focused-tags $tags

	# Mod+Shift+[1-9] to tag focused view with tag [0-6]
	riverctl map normal $mod+Shift $i set-view-tags $tags

	# Mod+Ctrl+[1-9] to toggle focus of tag [0-6]
	riverctl map normal $mod+Control $i toggle-focused-tags $tags

	# Mod+Shift+Ctrl+[1-9] to toggle tag [0-6] of focused view
	riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# Toggle float
riverctl map normal $mod F toggle-float

# Toggle fullscreen
riverctl map normal $mod M toggle-fullscreen

# Mod+Shift+Alt+{H,J,K,L} to change layout orientation
riverctl map normal $mod+Shift+$mod1 K send-layout-cmd rivertile "main-location top"
riverctl map normal $mod+Shift+$mod1 L send-layout-cmd rivertile "main-location right"
riverctl map normal $mod+Shift+$mod1 J send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mod+Shift+$mod1 H send-layout-cmd rivertile "main-location left"

for mode in normal locked; do
	# Control volume with amixer
	#riverctl map $mode None XF86AudioRaiseVolume spawn 'amixer -D pulse set Master 5%+'
	#riverctl map $mode None XF86AudioLowerVolume spawn 'amixer -D pulse set Master 5%-'
	riverctl map $mode None XF86AudioRaiseVolume spawn 'pactl set-sink-volume 0 +5%'
	riverctl map $mode None XF86AudioLowerVolume spawn 'pactl set-sink-volume 0 -5%'
	riverctl map $mode None XF86AudioMute spawn 'pactl set-sink-mute 0 toggle'

	# Control MPRIS aware media players with playerctl
	riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
	riverctl map $mode None XF86AudioPlay spawn 'playerctl play-pause'
	riverctl map $mode None XF86AudioPrev spawn 'playerctl previous'
	riverctl map $mode None XF86AudioNext spawn 'playerctl next'

	# Control screen backlight brightness with brightnessctl
	riverctl map $mode None XF86MonBrightnessUp spawn 'brightnessctl set 5%+'
	riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'

	# Default Browser Picker
	riverctl map normal $mod+Alt B spawn '/home/$USER/.config/river/scripts/browser-xdg'

	# Bookmark Picker
	riverctl map normal $mod+Alt D spawn '/home/$USER/.config/river/scripts/shiori-picker'

	# Screenshot
	riverctl map $mode None Print spawn '/home/$USER/.config/river/scripts/ss'
	riverctl map normal $mod+Alt S spawn '/home/$USER/.config/river/scripts/ss'
done

# Set background and border color
#riverctl border-color-focused 0x5e81ac #blue  #5e81ac
#riverctl border-color-unfocused 0x4c566a #tiel? #4c566a
riverctl border-color-focused 0x8FBCBB   #cyan #8FBCBB
riverctl border-color-unfocused 0x5E81AC #blue #5E81AC
riverctl border-color-urgent 0xBF616A    #red #BF616A
riverctl border-width 4                  #test borderwidth

# Set repeat rate
# riverctl set-repeat 100 300

riverctl focus-follows-cursor normal

# Make certain views start floating
riverctl float-filter-add app-id float
riverctl float-filter-add title "popup title with spaces"

# The scratchpad will live on an unused tag. Which tags are used depends on your
# config, but rivers default uses the first 9 tags.
scratch_tag=$((1 << 20))
# Toggle the scratchpad with Super+P
riverctl map normal $mod P toggle-focused-tags ${scratch_tag}
# Send windows to the scratchpad with Super+Shift+P
riverctl map normal $mod+Shift P set-view-tags ${scratch_tag}
# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
all_but_scratch_tag=$((((1 << 32) - 1) ^ $scratch_tag))
riverctl spawn-tagmask ${all_but_scratch_tag}

bash "$HOME/.config/river/process.sh"

# Set cursor_theme in river needed?
riverctl xcursor-theme Adwaita

# usage: import-gsettings: nothing should go below this
config="${XDG_CONFIG_HOME:-$HOME/.config}/gtk-3.0/settings.ini"
if [ ! -f "$config" ]; then exit 1; fi

gnome_schema="org.gnome.desktop.interface"
gtk_theme="$(grep 'gtk-theme-name' "$config" | sed 's/.*\s*=\s*//')"
icon_theme="$(grep 'gtk-icon-theme-name' "$config" | sed 's/.*\s*=\s*//')"
cursor_theme="$(grep 'gtk-cursor-theme-name' "$config" | sed 's/.*\s*=\s*//')"
font_name="$(grep 'gtk-font-name' "$config" | sed 's/.*\s*=\s*//')"
gsettings set "$gnome_schema" gtk-theme "$gtk_theme"
gsettings set "$gnome_schema" icon-theme "$icon_theme"
gsettings set "$gnome_schema" cursor-theme "$cursor_theme"
gsettings set "$gnome_schema" font-name "$font_name"
gsettings set org.gnome.settings-daemon.plugins.xsettings overrides "[{'Gdk/WindowScalingFactor', <2>}]"
gsettings set org.gnome.desktop.interface scaling-factor 2
